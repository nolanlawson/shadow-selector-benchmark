{"version":3,"file":"index.js","sources":["../node_modules/random-seedable/src/PRNG.js","../node_modules/random-seedable/src/PRNG64.js","../node_modules/random-seedable/src/constants.js","../node_modules/random-seedable/src/xorshift64.js","../node_modules/random-seedable/src/lcg.js","../node_modules/random-seedable/src/index.js","../src/rando.js","../node_modules/promise-worker/index.js","../src/workerClient.js","../src/index.js"],"sourcesContent":["/**\n * Superclass for all implemented generators.\n */\nclass PRNG {\n  /**\n   * @constructor\n   * @param {number | bigint} max -> Max number that can be generated by this generator.\n   * @param {number | bigint} seed -> Initial seed.\n   */\n  constructor(max, seed) {\n    /**\n     * @protected\n     * @readonly\n     * @type {number | bigint}\n     */\n    this.max = max;\n    /**\n     * @protected\n     * @type {number | bigint}\n     */\n    this._seed = seed;\n  }\n\n  /**\n   * Casts the given BigInt number to an unsigned big int with the given\n   * number of bits.\n   *\n   * @protected\n   * @param {bigint} number -> A string param.\n   * @param {number} bits -> An optional param (Closure syntax)\n   * @return {bigint} This is the result\n   */\n  cast(number, bits) {\n    return BigInt.asUintN(bits, number);\n  }\n\n  /**\n   * Checks that a given number is within the range.\n   *\n   * @protected\n   * @param {number} number -> A string param.\n   * @throws Error -> Number greater than max.\n   */\n  checkNum(number) {\n    if (number > this.max) {\n      throw new Error(`Number greater than ${this.max}`);\n    }\n  }\n\n  /**\n   * Resets the PRNG.\n   * To be implemented by sub-classes.\n   *\n   * @public\n   * @throws Error -> Method not implemented.\n   */\n  reset() {\n    if (this.constructor === PRNG) {\n      throw new Error('Method not implemented');\n    }\n  }\n\n  /**\n   * Private method for integer generation.\n   * To be implemented by sub-classes.\n   *\n   * @protected\n   * @return {bigint} Random integer.\n   */\n  _int() {\n    if (this.constructor === PRNG) {\n      throw new Error('Method not implemented');\n    }\n    return BigInt(0);\n  }\n\n  /**\n   * Generates a boolean with the formula random.float() >= 0.5\n   *\n   * @example\n   * random.bool();\n   *\n   * @example\n   * random.bool(); // true\n   *\n   * @public\n   * @returns {boolean} True/False.\n   */\n  bool() {\n    return this.float() >= 0.5;\n  }\n\n  /**\n   * Generates a random boolean with probability of it being true denoted by the pTrue parameter.\n   * For example, when pTrue=0.8, 80% of the numbers generated with this method will be true.\n   *\n   * @example\n   * random.coin(pTrue);\n   *\n   * @example\n   * random.coin(0.8); // true\n   *\n   * @public\n   * @param {number} pTrue -> Probability of generating a true value.\n   * @returns {boolean} True/False.\n   */\n  coin(pTrue = 0.5) {\n    return this.float() < pTrue;\n  }\n\n  /**\n   * Generates and returns the next number in the PRNGs sequence.\n   *\n   * @example\n   * random.int();\n   *\n   * @example\n   * random.int(); // 85424123\n   *\n   * @public\n   * @returns {number} Number less than 2 ** 32 for 32 bit generators.\n   */\n  int() {\n    return Number(this._int());\n  }\n\n  /**\n   * Generates and returns the next number in the PRNGs sequence and returns it as a Bigint.\n   *\n   * @example\n   * random.bigInt();\n   *\n   * @example\n   * random.bigInt(); // 85424123n\n   *\n   * @public\n   * @returns {bigint} Number less than 2 ** 32 for 32 bit generators represented as a BigInt class.\n   */\n  bigInt() {\n    return this._int();\n  }\n\n  /**\n   * Generates a random floating point number.\n   *\n   * @example\n   * random.float();\n   *\n   * @example\n   * random.float(); // 0.234242\n   *\n   * @public\n   * @returns {number} Float between 0.0 - 1.0.\n   */\n  float() {\n    return this.int() * (1.0 / this.max);\n  }\n\n  /**\n   * Generates a random floating point number.\n   *\n   * @example\n   * random.float53();\n   *\n   * @example\n   * random.float53(); // 0.2342422341231\n   *\n   * @public\n   * @returns {number} Float between 0.0 - 1.0.\n   */\n  float53() {\n    const a = this.int() >>> 5;\n    const b = this.int() >>> 6;\n\n    return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n  }\n\n  /**\n   * Generates a number within the given range.\n   *\n   * @example\n   * random.randRange(min, max);\n   *\n   * @example\n   * const lowerBound = 4;\n   * const upperBound = 2432;\n   * random.randRange(lowerBound, upperBound); // 36.\n   *\n   * @public\n   * @param {number} min -> Lower bound of the numbers to generate (inclusive).\n   * @param {number} max -> Upper bound of the numbers to generate (inclusive).\n   * @returns {number} Number min <= Number <= max.\n   */\n  randRange(min, max) {\n    // Debiased Modulo method,\n    // https://docs.oracle.com/javase/6/docs/api/java/util/Random.html#nextInt%28int%29\n    // https://peteroupc.github.io/randomnotes.html\n    // https://www.pcg-random.org/posts/bounded-rands.html\n    const range = max - min;\n    const t = this.max % range;\n    let r = this.int();\n\n    while (r < t) {\n      r = this.int();\n    }\n\n    return min + (r % range);\n  }\n\n  /**\n   * Generates a number below the given maximum.\n   *\n   * @example\n   * random.randBelow(max);\n   *\n   * @example\n   * const upperBound = 2432;\n   * random.randBelow(upperBound);  // 285.\n   *\n   * @public\n   * @param {number} max -> Upper bound of the numbers to generate (inclusive).\n   * @returns {number} Number <= max\n   */\n  randBelow(max) {\n    return this.randRange(0, max);\n  }\n\n  /**\n   * Picks a random element from the array.\n   *\n   * @example\n   * random.choice(array)\n   *\n   * @example\n   * const arr = [1, 4, 2, 3];\n   * random.choice(arr); // 4\n   *\n   * @public\n   * @param {any[]} array -> Array of any type from which we randomly select one item.\n   * @returns {any} A single item from the array of type ?.\n   */\n  choice(array) {\n    return array[this.randBelow(array.length)];\n  }\n\n  /**\n   * Randomly shuffles the given array using the fisher-yates algorithm.\n   *\n   * @example\n   * random.shuffle(array, inPlace = false)\n   *\n   * @example\n   * const arr = [1, 4, 2, 3];\n   * const shuffled = random.shuffle(arr, false);\n   * console.log(arr); // [1, 4, 2, 3]\n   * console.log(shuffled); // [4, 2, 3, 1]\n   *\n   * @example\n   * const arr = [1, 4, 2, 3];\n   * const shuffled = random.shuffle(arr, true);\n   * console.log(arr); // [4, 2, 3, 1]\n   * console.log(shuffled); // [4, 2, 3, 1]\n   *\n   * @public\n   * @param {any[]} array -> Array of any type to be shuffled.\n   * @param {boolean} inPlace -> Shuffle the array (true) or shuffle a copy of array (false).\n   * @returns {any[]} Array shuffled (inPlace === false), shuffled copy of array (inPlace === true).\n   */\n  shuffle(array, inPlace = true) {\n    let toSort = array;\n\n    if (!inPlace) {\n      toSort = Array.from(toSort);\n    }\n\n    // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle.\n    for (let i = toSort.length - 1; i > 0; i--) {\n      const j = this.randRange(0, i);\n      const temp = toSort[i];\n      toSort[i] = toSort[j];\n      toSort[j] = temp;\n    }\n\n    return toSort;\n  }\n\n  /**\n   * Creates an array of the given size populated with the result of the mapFn.\n   *\n   * @protected\n   * @param {number} size -> Length of the array to create.\n   * @param {function(): boolean | number | bigint} mapFn -> Function which we use to fill array.\n   * @returns {boolean[] | number[] | bigint[]} Array created by repeated calls to the mapFn.\n   */\n  initArray(size, mapFn) {\n    return Array.from({ length: size }, mapFn);\n  }\n\n  /**\n   * Generates an n size array populated with booleans.\n   *\n   * @example\n   * random.boolArray(size);\n   *\n   * @example\n   * const size = 256;\n   * random.boolArray(size);\n   *\n   * @public\n   * @param {number} size -> Size of the array to generate.\n   * @returns {boolean[]} Array[Boolean] of length size.\n   */\n  boolArray(size) {\n    return this.initArray(size, () => this.bool());\n  }\n\n  /**\n   * Generates an n size array of random booleans with probability of it being true\n   * denoted by the pTrue parameter. For example, when pTrue=0.8, 80% of the numbers\n   * in the generated array will be true.\n   *\n   * @example\n   * random.coinArray(size, pTrue);\n   *\n   * @example\n   * const size = 256;\n   * const pTrue = 0.8;\n   * random.coinArray(size, pTrue);\n   *\n   * @public\n   * @param {number} size -> Size of the array to generate.\n   * @param {number} pTrue -> Probability of generating a true value.\n   * @returns {boolean[]} Array[Boolean] of length size.\n   */\n  coinArray(size, pTrue = 0.5) {\n    return this.initArray(size, () => this.coin(pTrue));\n  }\n\n  /**\n   * Generates an n size array populated with integers.\n   *\n   * @example\n   * random.intArray(size);\n   *\n   * @example\n   * const size = 256;\n   * random.intArray(size);\n   *\n   * @public\n   * @param size -> Size of the array to generate.\n   * @returns {number[]} Array[Number] of length size.\n   */\n  intArray(size) {\n    return this.initArray(size, () => this.int());\n  }\n\n  /**\n   * Generates an n size array populated with Big Integers.\n   *\n   * @example\n   * random.bigIntArray(size);\n   *\n   * @example\n   * const size = 256;\n   * random.bigIntArray(size);\n   *\n   * @public\n   * @param size -> Size of the array to generate.\n   * @returns {bigint[]} Array[BigInt] of length size.\n   */\n  bigIntArray(size) {\n    return this.initArray(size, () => this.bigInt());\n  }\n\n  /**\n   * Generates an n size array populated within the given range.\n   *\n   * @example\n   * random.randRangeArray(size, min, max);\n   *\n   * @example\n   * const size = 256;\n   * const lowerBound = 4;\n   * const upperBound = 2432;\n   * random.randRangeArray(size, lowerBound, upperBound);\n   *\n   * @public\n   * @param {number} size -> Size of the array to generate.\n   * @param {number} min -> Lower bound of the numbers to generate (inclusive).\n   * @param {number} max -> Upper bound of the numbers to generate (inclusive).\n   * @returns {number[]} Array[Number] of length size filled w/ min <= num <= max.\n   */\n  randRangeArray(size, min, max) {\n    return this.initArray(size, () => this.randRange(min, max));\n  }\n\n  /**\n   * Generates an n size array populated with floats.\n   *\n   * @example\n   * random.floatArray(size);\n   *\n   * @example\n   * const size = 256;\n   * random.floatArray(size);\n   *\n   * @public\n   * @param size -> Size of the array to generate.\n   * @returns {number[]} Array[Number] between 0.0 - 1.0 of length size.\n   */\n  floatArray(size) {\n    return this.initArray(size, () => this.float());\n  }\n\n  /**\n   * Generates an n size array populated with floats.\n   *\n   * @example\n   * random.float53Array(size);\n   *\n   * @example\n   * const size = 256;\n   * random.float53Array(size);\n   *\n   * @public\n   * @param size -> Size of the array to generate.\n   * @returns {number[]} Array[Number] between 0.0 - 1.0 of length size.\n   */\n  float53Array(size) {\n    return this.initArray(size, () => this.float53());\n  }\n}\n\nexport default PRNG;\n","import PRNG from './PRNG.js';\n\n/**\n * 64 bit modification of PRNG class.\n * @class\n * @extends {PRNG}\n * @param {number | bigint} max -> Max number that can be generated by this generator.\n * @param {number | bigint} seed -> Initial seed.\n */\nclass PRNG64 extends PRNG {\n  /**\n   * @constructor\n   * @param {number | bigint} max -> Max number that can be generated by this generator.\n   * @param {number | bigint} seed -> Initial seed.\n   */\n  constructor(max, seed) {\n    super(max, seed);\n  }\n\n  /**\n   * Generates and returns the next number in the PRNGs sequence.\n   * As this is a 64 bit generator and javascript integers are limited to 53 bits,\n   * the generated BigInt result is right-shifted 11 bits; discarding the least significant bits.\n   *\n   * @example\n   * random.int();\n   *\n   * @example\n   * random.int(); // 85424123\n   *\n   * @public\n   * @returns {number} Number less than 2 ** 53 for 64 bit generators.\n   */\n  int() {\n    // Javascript only has 2 ** 53 integer positions, take 64 bit output and only take the upper 53 bits for use\n    // as our output Number in int mode.\n    return Number(this._int() >> 11n);\n  }\n\n  /**\n   * Generates a random floating point number.\n   *\n   * @example\n   * random.float();\n   *\n   * @example\n   * random.float(); // 0.234242\n   *\n   * @public\n   * @returns {number} Float between 0.0 - 1.0.\n   */\n  float() {\n    return this.int() / this.max;\n  }\n\n  /**\n   * Generates a random floating point number.\n   *\n   * @example\n   * random.float53();\n   *\n   * @example\n   * random.float53(); // 0.2342422341231\n   *\n   * @public\n   * @returns {number} Float between 0.0 - 1.0.\n   */\n  float53() {\n    return this.float();\n  }\n}\n\nexport default PRNG64;\n","/** @type {number} */\nexport const MAX32 = 2 ** 32;\n/** @type {number} */\nexport const MAX53 = 2 ** 53;\n/** @type {bigint} */\nexport const MAX64 = 2n ** 64n;\n\n/** @enum {number | bigint} */\nexport default {\n  MAX32,\n  MAX53,\n  MAX64,\n};\n","import PRNG64 from './PRNG64.js';\nimport { MAX53 } from './constants.js';\n\n/**\n * XorShift generators are fast, efficient generators with good randomness quality.\n * This implementation has 64 bit output with 64 bits of internal state.\n *\n * @example\n * const random = new XORShift64(11234, 13, 7, 17);\n *\n * @class\n * @extends {PRNG64}\n * @param {number | bigint} seed -> Initial seed.\n * @param {number | bigint} a -> First bit shift parameter.\n * @param {number | bigint} b -> Second bit shift parameter.\n * @param {number | bigint} c -> Third bit shift parameter.\n */\nclass XORShift64 extends PRNG64 {\n  /**\n   * @constructor\n   * @param {number | bigint} seed -> Initial seed.\n   * @param {number | bigint} a -> First bit shift parameter.\n   * @param {number | bigint} b -> Second bit shift parameter.\n   * @param {number | bigint} c -> Third bit shift parameter.\n   */\n  constructor(seed = Date.now(), a = 13, b = 7, c = 17) {\n    super(MAX53, BigInt(seed));\n    this.seed = seed;\n    /**\n     * @private\n     * @type {BigInt}\n     */\n    this.a = this.cast(BigInt(a), 64);\n    /**\n     * @private\n     * @type {BigInt}\n     */\n    this.b = this.cast(BigInt(b), 64);\n    /**\n     * @private\n     * @type {BigInt}\n     */\n    this.c = this.cast(BigInt(c), 64);\n  }\n\n  /**\n   * Resets the generator to its original state.\n   */\n  reset() {\n    this.x = this.seed;\n  }\n\n  /**\n   * Seed getter.\n   *\n   * @public\n   * @returns {number | bigint} Retrieves seed.\n   */\n  get seed() {\n    return this._seed;\n  }\n\n  /**\n   * Converts seed into BigInt + takes steps to reset generator.\n   *\n   * @public\n   * @param {number | bigint} seed -> New seed to set.\n   */\n  set seed(seed) {\n    this._seed = this.cast(BigInt(seed), 64);\n    this.x = this._seed;\n  }\n\n  _int() {\n    let { x } = this;\n    x ^= x << this.a;\n    x = this.cast(x, 64);\n    x ^= x >> this.b;\n    x ^= x << this.c;\n    x = this.cast(x, 64);\n    this.x = x;\n    return x;\n  }\n}\n\nexport default XORShift64;\n","import PRNG from './PRNG.js';\n\n/**\n * Linear Congruential Generator (LCG) is a simple generator originally devised in 1951,\n * if you need something quick with minimal memory usage and not the best quality randomness,\n * this is for you. 32 bits of output.\n *\n * @example\n * const random = new LCG(1234, 1664525, 1013904223, 4294967296);\n *\n * @class\n * @extends {PRNG}\n * @param {number} seed ->  Initial seed.\n * @param {number} a -> Multiplier parameter.\n * @param {number} c -> Increment parameter.\n * @param {number} m -> Modulus parameter.\n */\nclass LCG extends PRNG {\n  /**\n   * @constructor\n   * @param {number} seed ->  Initial seed.\n   * @param {number} a -> Multiplier parameter.\n   * @param {number} c -> Increment parameter.\n   * @param {number} m -> Modulus parameter.\n   */\n  constructor(seed = Date.now(), a = 1664525, c = 1013904223, m = 4294967296) {\n    super(m, seed);\n    [seed, a, c, m].forEach((num) => this.checkNum(num));\n    this.seed = seed;\n    Object.assign(this, { a, c, m }); // Group assignment for brevity.\n  }\n\n  /**\n   * Resets the generator to its original state.\n   */\n  reset() {\n    this.x = this.seed;\n  }\n\n  /**\n   * Seed getter.\n   *\n   * @public\n   * @returns {number | bigint} Retrieves seed.\n   */\n  get seed() {\n    return this._seed;\n  }\n\n  /**\n   * Converts seed into BigInt + takes steps to reset generator.\n   * @param {number | bigint} seed -> New seed to set.\n   */\n  set seed(seed) {\n    this._seed = seed;\n    this.x = this._seed;\n  }\n\n  _int() {\n    this.x = (this.a * this.x + this.c) % this.m;\n    return BigInt(this.x);\n  }\n}\n\nexport default LCG;\n","import XORShift64 from './xorshift64.js';\n\nexport { default as LCG } from './lcg.js';\nexport { default as PCG } from './pcg.js';\nexport { default as MersenneTwister } from './mersenneTwister.js';\nexport { default as XORShift } from './xorshift.js';\nexport { default as XORShift64 } from './xorshift64.js';\nexport { default as XORShift128 } from './xorshift128.js';\nexport { default as XORShift128Plus } from './xorshift128Plus.js';\nexport { default as XORWow } from './xorwow.js';\n\nexport const random = new XORShift64(Date.now());\nexport default new XORShift64(Date.now());\n","import { LCG } from 'random-seedable'\n\nconst SEED = 114569486 // use a consistent seed\n\nlet random\n\nconst tags = [\n  'custom-a',\n  'custom-b',\n  'custom-c',\n  'custom-d',\n  'custom-e',\n  'custom-f',\n  'custom-g',\n  'custom-h',\n  'custom-i',\n  'custom-j',\n]\n\nconst colors = [\n  \"aliceblue\",\n  \"antiquewhite\",\n  \"aqua\",\n  \"aquamarine\",\n  \"azure\",\n  \"beige\",\n  \"bisque\",\n  \"black\",\n  \"blanchedalmond\",\n  \"blue\",\n  \"blueviolet\",\n  \"brown\",\n  \"burlywood\",\n  \"cadetblue\",\n  \"chartreuse\",\n  \"chocolate\",\n  \"coral\",\n  \"cornflowerblue\",\n  \"cornsilk\",\n  \"crimson\",\n  \"cyan\",\n  \"darkblue\",\n  \"darkcyan\",\n  \"darkgoldenrod\",\n  \"darkgray\",\n  \"darkgreen\",\n  \"darkgrey\",\n  \"darkkhaki\",\n  \"darkmagenta\",\n  \"darkolivegreen\",\n  \"darkorange\",\n  \"darkorchid\",\n  \"darkred\",\n  \"darksalmon\",\n  \"darkseagreen\",\n  \"darkslateblue\",\n  \"darkslategray\",\n  \"darkslategrey\",\n  \"darkturquoise\",\n  \"darkviolet\",\n  \"deeppink\",\n  \"deepskyblue\",\n  \"dimgray\",\n  \"dimgrey\",\n  \"dodgerblue\",\n  \"firebrick\",\n  \"floralwhite\",\n  \"forestgreen\",\n  \"fuchsia\",\n  \"gainsboro\",\n  \"ghostwhite\",\n  \"goldenrod\",\n  \"gold\",\n  \"gray\",\n  \"green\",\n  \"greenyellow\",\n  \"grey\",\n  \"honeydew\",\n  \"hotpink\",\n  \"indianred\",\n  \"indigo\",\n  \"ivory\",\n  \"khaki\",\n  \"lavenderblush\",\n  \"lavender\",\n  \"lawngreen\",\n  \"lemonchiffon\",\n  \"lightblue\",\n  \"lightcoral\",\n  \"lightcyan\",\n  \"lightgoldenrodyellow\",\n  \"lightgray\",\n  \"lightgreen\",\n  \"lightgrey\",\n  \"lightpink\",\n  \"lightsalmon\",\n  \"lightseagreen\",\n  \"lightskyblue\",\n  \"lightslategray\",\n  \"lightslategrey\",\n  \"lightsteelblue\",\n  \"lightyellow\",\n  \"lime\",\n  \"limegreen\",\n  \"linen\",\n  \"magenta\",\n  \"maroon\",\n  \"mediumaquamarine\",\n  \"mediumblue\",\n  \"mediumorchid\",\n  \"mediumpurple\",\n  \"mediumseagreen\",\n  \"mediumslateblue\",\n  \"mediumspringgreen\",\n  \"mediumturquoise\",\n  \"mediumvioletred\",\n  \"midnightblue\",\n  \"mintcream\",\n  \"mistyrose\",\n  \"moccasin\",\n  \"navajowhite\",\n  \"navy\",\n  \"oldlace\",\n  \"olive\",\n  \"olivedrab\",\n  \"orange\",\n  \"orangered\",\n  \"orchid\",\n  \"palegoldenrod\",\n  \"palegreen\",\n  \"paleturquoise\",\n  \"palevioletred\",\n  \"papayawhip\",\n  \"peachpuff\",\n  \"peru\",\n  \"pink\",\n  \"plum\",\n  \"powderblue\",\n  \"purple\",\n  \"rebeccapurple\",\n  \"red\",\n  \"rosybrown\",\n  \"royalblue\",\n  \"saddlebrown\",\n  \"salmon\",\n  \"sandybrown\",\n  \"seagreen\",\n  \"seashell\",\n  \"sienna\",\n  \"silver\",\n  \"skyblue\",\n  \"slateblue\",\n  \"slategray\",\n  \"slategrey\",\n  \"snow\",\n  \"springgreen\",\n  \"steelblue\",\n  \"tan\",\n  \"teal\",\n  \"thistle\",\n  \"tomato\",\n  \"turquoise\",\n  \"violet\",\n  \"wheat\",\n  \"white\",\n  \"whitesmoke\",\n  \"yellow\",\n  \"yellowgreen\"\n]\n\nexport const randomString = () => 'x' + Math.round(random.int()).toString(16)\n\nlet attributes\n\nexport function randomChoice(arr) {\n  return random.choice(arr)\n}\n\nexport const randomTag = () => randomChoice(tags)\nexport const randomColor = () => randomChoice(colors)\n\nexport const randomNumber = (from, to) => random.randRange(from, to)\nexport const randomBool = () => random.bool()\nexport const randomCoin = (prob) => random.coin(prob)\nexport const randomAttribute = () => {\n  // attributes are likely to collide (e.g. aria-label, aria-pressed), so used a global fixed set\n  if (!attributes) {\n    attributes = Array(100).fill().map(() => `data-${randomString()}`)\n  }\n  return randomChoice(attributes)\n}\n\nexport const resetRandomSeed = () => {\n  attributes = undefined // reset\n  random = new LCG(SEED) // LCG used because it's relatively fast compared to others\n}\n\nresetRandomSeed()","'use strict'\n\nvar messageIds = 0\n\nfunction onMessage (self, e) {\n  var message = e.data\n  if (!Array.isArray(message) || message.length < 2) {\n    // Ignore - this message is not for us.\n    return\n  }\n  var messageId = message[0]\n  var error = message[1]\n  var result = message[2]\n\n  var callback = self._callbacks[messageId]\n\n  if (!callback) {\n    // Ignore - user might have created multiple PromiseWorkers.\n    // This message is not for us.\n    return\n  }\n\n  delete self._callbacks[messageId]\n  callback(error, result)\n}\n\nfunction PromiseWorker (worker) {\n  var self = this\n  self._worker = worker\n  self._callbacks = {}\n\n  worker.addEventListener('message', function (e) {\n    onMessage(self, e)\n  })\n}\n\nPromiseWorker.prototype.postMessage = function (userMessage) {\n  var self = this\n  var messageId = messageIds++\n\n  var messageToSend = [messageId, userMessage]\n\n  return new Promise(function (resolve, reject) {\n    self._callbacks[messageId] = function (error, result) {\n      if (error) {\n        return reject(new Error(error.message))\n      }\n      resolve(result)\n    }\n\n    /* istanbul ignore if */\n    if (typeof self._worker.controller !== 'undefined') {\n      // service worker, use MessageChannels because e.source is broken in Chrome < 51:\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=543198\n      var channel = new MessageChannel()\n      channel.port1.onmessage = function (e) {\n        onMessage(self, e)\n      }\n      self._worker.controller.postMessage(messageToSend, [channel.port2])\n    } else {\n      // web worker\n      self._worker.postMessage(messageToSend)\n    }\n  })\n}\n\nmodule.exports = PromiseWorker\n","import PromiseWorker from 'promise-worker';\n\nconst poolSize = (navigator.hardwareConcurrency ?? 2) - 1\n\nlet currentWorker = 0\nconst workerUrl = new URL('./worker.js', import.meta.url)\nconst workerPool = new Array(poolSize).fill().map(() => new PromiseWorker(new Worker(workerUrl.toString())))\n\nfunction nextWorker() {\n  try {\n    return workerPool[currentWorker]\n  } finally {\n    currentWorker++\n    if (currentWorker === poolSize) {\n      currentWorker = 0\n    }\n  }\n}\n\nexport async function scopeStyle({ css, token, useClasses, mode, componentTag }) {\n  const res = await nextWorker().postMessage({ css, token, useClasses, mode, componentTag })\n  return res\n}","import {\n  randomNumber,\n  randomString,\n  randomColor,\n  randomTag,\n  randomBool,\n  randomChoice,\n  randomCoin,\n  resetRandomSeed, randomAttribute\n} from './rando.js';\nimport {scopeStyle} from './workerClient.js';\n\nconst $ = document.querySelector.bind(document)\nconst $$ = _ => [...document.querySelectorAll(_)]\n\nconst goButton = $('#go')\nconst useShadowDomInput = $('#useShadowDom')\nconst scopeStylesInput = $('#scopeStyles')\nconst numRulesInput = $('#numRules')\nconst numComponentsInput = $('#numComponents')\nconst numElementsInput = $('#numElements')\nconst numClassesInput = $('#numClasses')\nconst numAttributesInput = $('#numAttributes')\nconst oneBigStyleInput = $('#oneBigStyle')\nconst useClassesInput = $('#useClasses')\nconst scopeModeInputLast = $('#scopeModeLast')\nconst scopeModeInputEvery = $('#scopeModeEvery')\nconst scopeModeInputPrefix = $('#scopeModePrefix')\nconst container = $('#container')\nconst display = $('#display')\n\nlet scopeId = 0\nlet componentTagNameIndex = 0\n\nscopeStylesInput.addEventListener('change', () => {\n  for (const input of [useClassesInput, scopeModeInputLast, scopeModeInputEvery, scopeModeInputPrefix]) {\n    input.disabled = !scopeStylesInput.checked\n  }\n})\n\ngoButton.addEventListener('click', e => {\n  e.preventDefault()\n  runTest()\n})\n\nasync function runTest() {\n  goButton.disabled = true\n  try {\n    await doRunTest()\n  } finally {\n    goButton.disabled = false\n  }\n}\n\nfunction generateAttributeValueSelector({ name, value }) {\n  return `[${name}=${JSON.stringify(value)}]`\n}\n\nfunction generateRandomCssRule({ classes, attributes, tags }) {\n\n  const allSelectorTypes = ['tag', 'class', 'attributeName', 'attributeValue', 'notClass', 'notAttribute', 'nthChild']\n\n  function generateRandomFullSelector() {\n    let str = ''\n    do {\n      const firstSelectorType = randomChoice(allSelectorTypes)\n      str += generateRandomSelector(firstSelectorType)\n\n      if (randomBool()) {\n        // concatenating a tag to something else is not okay\n        const secondSelectorType = randomChoice(allSelectorTypes.filter(_ => _ !== 'tag'))\n        str += generateRandomSelector(secondSelectorType) // combinator selector\n      }\n      str += ' ' // descendant selector\n    } while (randomBool())\n\n    return str\n  }\n\n  function generateRandomSelector(selectorType) {\n    switch (selectorType) {\n      case 'tag':\n        return tags.length ? randomChoice(tags) : randomString()\n      case 'class':\n        return '.' + (classes.length ? randomChoice(classes) : randomString())\n      case 'attributeName':\n        return '[' + (attributes.length ? randomChoice(attributes.map(_ => _.name)) : randomString()) + ']'\n      case 'attributeValue':\n        return generateAttributeValueSelector(attributes.length ? randomChoice(attributes) : { name: randomString(), value: randomString() })\n      case 'notClass':\n        return ':not(.' + (classes.length ? randomChoice(classes) : randomString()) + ')'\n      case 'notAttribute':\n        return ':not([' + (attributes.length ? randomChoice(attributes.map(_ => _.name)) : randomString()) + '])'\n      case 'nthChild':\n        return `:nth-child(${randomNumber(1, 5)})`\n    }\n  }\n\n  const selector = generateRandomFullSelector()\n\n  return `${selector} { background-color: ${randomColor()}; }`\n}\n\nfunction generateRandomCss({ numRules, classes, attributes, tags }) {\n  let str = ''\n\n  for (let i = 0; i < numRules; i++) {\n    str += generateRandomCssRule({ classes, attributes, tags }) + '\\n\\n'\n  }\n\n  return str\n}\n\nfunction createStyleTag(css) {\n  const style = document.createElement('style')\n  style.textContent = css\n  return style\n}\n\nfunction injectGlobalCss(css) {\n  document.head.appendChild(createStyleTag(css))\n}\n\nfunction reset() {\n  container.innerHTML = ''\n  $$('style').forEach(style => style.remove())\n  resetRandomSeed()\n  scopeId = 0\n  componentTagNameIndex = 0\n}\n\nasync function doRunTest() {\n  const numComponents = parseInt(numComponentsInput.value, 10)\n  const numElementsPerComponent = parseInt(numElementsInput.value, 10)\n  const numClassesPerElement = parseInt(numClassesInput.value, 10)\n  const numAttributesPerElement = parseInt(numAttributesInput.value, 10)\n  const numRulesPerComponent = parseInt(numRulesInput.value, 10)\n  const useShadowDom = useShadowDomInput.checked\n  const scopeStyles = scopeStylesInput.checked\n  const oneBigStyle = oneBigStyleInput.checked\n  const useClasses = useClassesInput.checked\n  const scopeMode = scopeModeInputLast.checked ? 'last' : scopeModeInputEvery.checked ? 'every' : 'prefix'\n\n  reset()\n\n  async function generateRandomScopedCss({ classes, attributes, tags, scopeToken, useClasses, scopeMode, componentTag }) {\n    const css = generateRandomCss({ numRules: numRulesPerComponent, classes, attributes, tags })\n    if (!scopeStyles) {\n      return css\n    }\n    return (await scopeStyle({ css, token: scopeToken, useClasses, mode: scopeMode, componentTag }))\n  }\n\n  function createComponent({ scopeToken }) {\n    const component = document.createElement(`my-component-${componentTagNameIndex++}`)\n\n    let renderRoot = component\n    if (useShadowDom) {\n      const shadow = renderRoot.attachShadow({ mode: 'open' })\n      renderRoot = shadow\n    }\n\n    let lastElm\n\n    const tags = []\n    const classes = []\n    const attributes = []\n\n    for (let i = 0; i < numElementsPerComponent; i++) {\n      const tag = randomTag()\n      tags.push(tag)\n      const elm = document.createElement(tag)\n      Object.assign(elm.style, {\n        width: '1px',\n        height: '1px',\n        position: 'absolute',\n        left: '0',\n        right: '0'\n      })\n\n      for (let j = 0; j < numClassesPerElement; j++) {\n        const clazz = randomString()\n        classes.push(clazz)\n        elm.classList.add(clazz)\n      }\n\n      for (let j = 0; j < numAttributesPerElement; j++) {\n        const attribute = randomAttribute()\n        const attributeValue = randomString()\n        attributes.push({ name: attribute, value: attributeValue })\n        elm.setAttribute(attribute, attributeValue)\n      }\n\n      if (scopeToken) {\n        if (useClasses) {\n          elm.classList.add(scopeToken)\n        } else {\n          elm.setAttribute(scopeToken, '')\n        }\n      }\n\n      // Chance of making the tree deeper or keeping it flat\n      if (lastElm && randomCoin(0.75)) {\n        lastElm.appendChild(elm)\n      } else {\n        renderRoot.appendChild(elm)\n      }\n\n      lastElm = elm\n    }\n\n    return { component, tags, classes, attributes }\n  }\n\n  const generateStylesheetPromises = []\n  const newRoot = document.createElement('div')\n  let lastComponent\n\n  for (let i = 0; i < numComponents; i++) {\n    const scopeToken = scopeStyles && `scope-${++scopeId}`\n    const { component, tags, classes, attributes } = createComponent({ scopeToken })\n\n    generateStylesheetPromises.push((async () => {\n      const stylesheet = await generateRandomScopedCss({ classes, tags, attributes, scopeToken, useClasses, scopeMode, componentTag: component.tagName.toLowerCase() })\n\n      if (useShadowDom) {\n        return { shadowRoot: component.shadowRoot, stylesheet }\n      } else {\n        return stylesheet\n      }\n    })())\n\n    // Chance of making the tree deeper or keeping it flat\n    if (lastComponent && randomBool()) {\n      (lastComponent.shadowRoot ?? lastComponent).appendChild(component)\n    } else {\n      newRoot.appendChild(component)\n    }\n    lastComponent = component\n  }\n\n  function flushStyles(stylesheetsToProcess) {\n    if (useShadowDom) {\n      // We probably could have appended stylesheets to the shadow roots earlier,\n      // but just in case browsers have some magic to process the stylesheet as early as possible,\n      // do it at the same time we would be injecting global styles\n      for (const { shadowRoot, stylesheet } of stylesheetsToProcess) {\n        shadowRoot.appendChild(createStyleTag(stylesheet))\n      }\n    } else {\n      if (oneBigStyle) {\n        injectGlobalCss(stylesheetsToProcess.join('\\n'))\n      } else {\n        for (const stylesheet of stylesheetsToProcess) {\n          injectGlobalCss(stylesheet)\n        }\n      }\n    }\n  }\n\n  // Flush everything to the DOM in one go so we can measure accurately\n  const stylesheetsToProcess = await Promise.all(generateStylesheetPromises)\n  flushStyles(stylesheetsToProcess)\n  container.appendChild(newRoot)\n\n  performance.mark('start')\n  // requestPostAnimationFrame polyfill\n  requestAnimationFrame(() => {\n    addEventListener('message', () => {\n      performance.measure('total', 'start')\n      display.innerHTML += `${performance.getEntriesByType('measure').slice(-1)[0].duration}ms\\n`\n\n      logChecksums()\n\n    }, { once: true })\n    postMessage('', '*')\n  })\n}\n\nasync function logChecksums() {\n  // Make sure the HTML is the same every time\n  console.log('html digest', await digestMessage(container.getInnerHTML ? container.getInnerHTML({ includeShadowRoots: true }) : container.innerHTML))\n  console.log('style digest', await digestMessage($$('style').map(_ => _.textContent).join('\\n')))\n}\n\nasync function digestMessage(message) {\n  const msgUint8 = new TextEncoder().encode(message);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\nconst params = new URLSearchParams(location.search)\n\nasync function main() {\n  if (params.get('auto') === 'true') {\n    for (const input of $$('form input')) {\n      const { id } = input\n      const val = params.get(id)\n      if (val) {\n        if (input.type === 'number') {\n          input.value = parseInt(val, 10)\n        } else if (input.type === 'checkbox' || input.type === 'radio') {\n          input.checked = val === 'true'\n        }\n      }\n    }\n    // Avoid measuring the style/layout of the form elements\n    await new Promise(resolve => requestAnimationFrame(() => resolve()))\n    await new Promise(resolve => requestAnimationFrame(() => resolve()))\n    await doRunTest()\n  }\n}\n\nmain().catch(err => {\n  console.error(err)\n})"],"names":["PromiseWorker"],"mappings":"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"}